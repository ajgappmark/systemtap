set test "minidebuginfo"

if {![installtest_p]} { untested $test; return }
if {![uprobes_p]} { untested $test; return }

# Use testcase specific directory for testcase artifacts
set artifactsdir [setup_artifacts_dir]
set curdir [pwd]
cd $artifactsdir

catch { exec gcc -o binary -g $curdir/$subdir/minidebug.c } err

if {$err == ""} then { pass "$test compile" } else { fail "$test compile $err" }

catch { exec $curdir/$subdir/create-minidebug.sh } err
if {$err == ""} then { pass "$test create minidebug" } else { fail "$test create-minidebug.sh $err" }
spawn stap $curdir/$subdir/minidebuginfo.stp -c "./binary.test"
set ok 0
expect {
    -timeout 30
    -re {[^\r\n]*main\r\n} { incr ok; exp_continue }
    -re {[^\r\n]*bar\r\n} { incr ok; exp_continue }
    -re {[^\r\n]*foo\r\n} { incr ok; exp_continue }
    -re {[^\r\n]*return\r\n} { incr ok; exp_continue }
    eof { }
    timeout { fail "$test (timeout)" }
}
catch { close }; wait
if {$ok == 4} then { pass "$test ($ok)" } else { fail "$test ($ok)" }

set test "symtab-strip"

catch { exec gcc -o binary1 -g $curdir/$subdir/minidebug.c } err
if {$err == ""} then { pass "$test compile" } else { fail "$test compile $err" }
catch { exec strip -g binary1 } err
if {$err == ""} then { pass "$test strip" } else { fail "$test strip $err" }

spawn stap $curdir/$subdir/minidebuginfo.stp -c "./binary1"
set ok1 0
expect {
    -timeout 30
    -re {[^\r\n]*main\r\n} { incr ok1; exp_continue }
    -re {[^\r\n]*bar\r\n} { incr ok1; exp_continue }
    -re {[^\r\n]*foo\r\n} { incr ok1; exp_continue }
    -re {[^\r\n]*return\r\n} { incr ok1; exp_continue }
    eof { }
    timeout { fail "$test (timeout)" }
}
catch { close }; wait
if {$ok1 == 4} then { pass "$test ($ok1)" } else { fail "$test ($ok1)" }

# Switch back from the testcase specific working directory
cd $curdir
