# cache_clean.exp

# Since we need a clean cache directory.
set orig_systemtap_dir $env(SYSTEMTAP_DIR)
set artifacts_dir [setup_artifacts_dir]
set env(SYSTEMTAP_DIR) $artifacts_dir

exec /bin/mkdir $artifacts_dir/cache

# Set up the scripts we'll use.
set script1 "\"probe begin {println(1)}\""
set script2 "\"probe begin {println(2)}\""

#Set a high interval, so we can make sure that the cache isn't cleaned
exec /bin/echo 100000 > $artifacts_dir/cache/cache_clean_interval_s

# Make sure the cache isn't cleaned when it hasn't passed the interval
set test "cache_clean"
set cmd [concat {stap -vv -p4 -e} $script1]
eval spawn $cmd
set cleaned -1
expect {
  -timeout 180
  -re {^Cleaning cache, interval reached [^\r\n]*\r\n} {fail "$test premature cleaning"}
  -re {^Cache cleaning skipped, interval not reached [^\r\n]*\r\n} {pass "$test premature cleaning"}
  -re {^[^\r\n]*\r\n} {exp_continue}

  timeout { fail "$test (timeout)" }
}
catch close
wait

# Set a small interval to insure the next stap call cleans the cache
exec /bin/echo 1 > $artifacts_dir/cache/cache_clean_interval_s
sleep 1

# Make sure the cache is cleaned when it has passed the interval
set cmd [concat {stap -vv -p4 -e} $script2]
eval spawn $cmd
set cleaned -1
expect {
  -timeout 180
  -re {^Cleaning cache, interval reached [^\r\n]*\r\n} {pass "$test timed cleaning"}
  -re {^Cache cleaning skipped, interval not reached [^\r\n]*\r\n} {fail "$test timed cleaning"}
  -re {^[^\r\n]*\r\n} {exp_continue}

  timeout { fail "$test (timeout)" }
}
catch close
wait

# Reset SYSTEMTAP_DIR.
set env(SYSTEMTAP_DIR) $orig_systemtap_dir
